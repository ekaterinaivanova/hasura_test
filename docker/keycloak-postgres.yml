version: '3'

volumes:
  postgres_keycloak:
    driver: local
  postgres_app:
    driver: local
networks:
  keycloak_demo_dev_network:
    driver: bridge

services:
  postgres_keycloak:
      image: postgres:15.2
      command: postgres -c 'max-connections=200'
      volumes:
        - postgres_keycloak:/var/lib/postgresql/data
      environment:
        POSTGRES_DB: keycloak
        POSTGRES_USER: keycloak
        POSTGRES_PASSWORD: password
      healthcheck: 
        test: "exit 0"
      ports: 
        - "5436:5432"
      networks:
        - keycloak_demo_dev_network

  keycloak:
      image: quay.io/keycloak/keycloak:21.0.0
      command: start-dev
      environment:
        DB_VENDOR: POSTGRES
        DB_ADDR: postgres_keycloak
        DB_DATABASE: keycloak
        DB_USER: keycloak
        DB_SCHEMA: public
        DB_PASSWORD: password
        KEYCLOAK_USER: admin
        KEYCLOAK_PASSWORD: admin
      ports:
        - 8890:8080
      depends_on:
        postgres_keycloak:
          condition: service_healthy
      networks:
        - keycloak_demo_dev_network
  postgres:
      image: postgres:latest
      environment:
        POSTGRES_PASSWORD: postgrespassword
      volumes:
        - postgres_app:/var/lib/postgresql/data
      healthcheck: 
        test: "exit 0"
      networks:
        - keycloak_demo_dev_network
      restart: always
  hasura:
    image: hasura/graphql-engine:v2.19.0.cli-migrations-v2
    ports:
      - '8899:8899'
    depends_on:
      postgres: 
        condotion: service-healthy
    restart: always
    volumes:
      - ../hasura/migrations:/hasura-migrations
      - ../hasura/metadata:/hasura-metadata
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
      HASURA_GRAPHQL_SERVER_PORT: 8899
    networks:
        - keycloak_demo_dev_network